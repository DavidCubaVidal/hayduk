--TEST:  EXEC [dbo].[USP_STG_CARGA_TABLA] 'PM', 'CABECERA_AVISO_II';

ALTER PROCEDURE [dbo].[USP_STG_CARGA_TABLA] (
	@MODULO_SAP VARCHAR(75),
	@TABLA_STAGE VARCHAR(75)
	)
AS
BEGIN
SET NOCOUNT ON

	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	-- Variables
	DECLARE @TABLA_SAP VARCHAR(75), @CAMPOS VARCHAR(2000),
	@FILTROS VARCHAR(2000), @MENSAJE VARCHAR(MAX), @SQLCOMMAND VARCHAR(MAX), @LOG_ID INT;

	SELECT TOP 1 @TABLA_SAP = TABLA_SAP, @CAMPOS= CAMPOS, @FILTROS = FILTROS
	FROM CARGA_STAGE
	WHERE MODULO_SAP = @MODULO_SAP AND TABLA_STAGE = @TABLA_STAGE AND ACTIVO = 1;

	IF (@TABLA_SAP IS NULL)
	BEGIN
		PRINT 'Error: Verificar los parametros de entrada (Modulo/Tabla Stage)'
		RETURN
	END

	-- Carga la tabla en Stage
	DECLARE @HORARIO VARCHAR(75) = 'MANUAL';
	BEGIN TRY
		-- LOG INI
		INSERT INTO CARGA_STAGE_LOG VALUES (@MODULO_SAP, @TABLA_SAP, @TABLA_STAGE, CAST(GETDATE()AS DATE), @HORARIO, GETDATE(), NULL, 0, 0, 'Inicio Carga', 0);
		SET @LOG_ID = @@IDENTITY;

		-- Copiar tabla
		SET @SQLCOMMAND = '
			SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

			IF OBJECT_ID(''' + @TABLA_STAGE + ''', ''U'') IS NOT NULL
			DROP TABLE ' + @TABLA_STAGE + ';

			SELECT ' + @CAMPOS + '
			INTO ' + @TABLA_STAGE + '
			FROM HDKSAPSQL.PRD.prd.' + @TABLA_SAP + ' A (NOLOCK) 
			' + @FILTROS + '
		'

		EXEC (@SQLCOMMAND)

		-- LOG FIN 'Carga completa'
		UPDATE CARGA_STAGE_LOG SET FECHA_FIN = GETDATE(), DURACION = DATEDIFF(SECOND,FECHA_INI,GETDATE()), REGISTROS = @@ROWCOUNT, EXITO = 1, MENSAJE = 'Carga completa' WHERE LOG_ID = @LOG_ID;
	END TRY
	BEGIN CATCH

		-- LOG ERROR_MESSAGE
		SET @MENSAJE = ERROR_MESSAGE()
		UPDATE CARGA_STAGE_LOG SET FECHA_FIN = GETDATE(), REGISTROS = @@ROWCOUNT, EXITO = 0, MENSAJE = @MENSAJE WHERE LOG_ID = @LOG_ID;
		RETURN

	END CATCH

END;





